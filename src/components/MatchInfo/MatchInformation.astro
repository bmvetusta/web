---
import type { matchSchema } from 'src/schema/generics/match';
import EndedMatchInfo from './EndedMatchInfo.astro';
import PendingMatch from './PendingMatch.astro';
import PlayingMatchInfo from './PlayingMatchInfo.astro';

interface Props {
  initialMatchData: typeof matchSchema._output;
  probablyMatchStatus: typeof matchSchema._output.status;
  isTodayMatch: boolean;
}

const { initialMatchData: match, probablyMatchStatus, isTodayMatch } = Astro.props as Props;

const isEnded =
  match.status.startsWith('ENDED') ||
  match.status === 'SUSPENDED' ||
  probablyMatchStatus === 'ENDED';
const isPlaying = match.status === 'PLAYING' || (!isEnded && probablyMatchStatus === 'PLAYING');
const isPending = !isEnded && !isPlaying;
---

{
  isPending ? (
    <>
      <PendingMatch
        isTodayMatch={isTodayMatch}
        match={match}
        urlStreaming={match.urlStreaming}
        server:defer
      />
    </>
  ) : (
    ''
  )
}

{
  isEnded ? (
    <>
      <EndedMatchInfo match={match} server:defer />
    </>
  ) : (
    ''
  )
}

{
  isPlaying ? (
    <>
      <PlayingMatchInfo match={match} server:defer />
    </>
  ) : (
    ''
  )
}
