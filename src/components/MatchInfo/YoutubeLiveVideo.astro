---
import { YOUTUBE_CHANNEL } from 'astro:env/server';
import { isYoutubeChannelLive } from 'src/services/is-yotube-channel-live';
import SafariYoutubeVideo from '../youtube/SafariYoutubeVideo.astro';
import YoutubeVideo from '../youtube/YoutubeVideo.astro';
import SocialNetwork from '../SocialNetwork.astro';

interface Props {
  youtubeVideoId: string;
  isLiveVideo: boolean;
}

// const today = new Date();
// const currentTime = today.toLocaleTimeString('es-ES', {
//   timeZone: 'Europe/Madrid',
//   hour12: false,
//   hour: '2-digit',
//   minute: '2-digit',
// });

// function isProbablyEndMatch(now: string, startTime?: string | null) {
//   if (!startTime) {
//     return true; // Means ended
//   }

//   const [startHour, startMinute] = startTime.split(':').map(Number);
//   const [currentHour, currentMinute] = now.split(':').map(Number);

//   const probablyEndHour = startHour + 2;

//   return (
//     currentHour > probablyEndHour ||
//     (currentHour === probablyEndHour && currentMinute >= startMinute)
//   );
// }

const { isLiveVideo, youtubeVideoId: inputVideoId = null } = Astro.props as Props;

const isChannelLive = !isLiveVideo ? await isYoutubeChannelLive(YOUTUBE_CHANNEL) : false;
const youtubeVideoId = isChannelLive ? isChannelLive : inputVideoId;
const youtubeUrl =
  !isChannelLive && isLiveVideo
    ? `https://youtube.com/watch?v=${youtubeVideoId}`
    : `https://youtube.com/${YOUTUBE_CHANNEL}/live`;

const ua = Astro.request.headers.get('User-Agent');
const isSafari = ua?.includes('AppleWebKit') && !ua?.includes('Chrome');
const isLive = isLiveVideo || isChannelLive;

if (typeof youtubeVideoId !== 'string' || youtubeVideoId.length === 0) {
  console.error(`No youtube video id provided for ${inputVideoId}`);
}
---

{
  isLive ? (
    <>
      <article class='live'>
        <header>
          <p>Estamos en directo</p>
          <button>X</button>
        </header>

        <main>
          {typeof youtubeVideoId === 'string' && youtubeVideoId.length > 0 ? (
            <>
              {isSafari ? (
                <SafariYoutubeVideo videoId={youtubeVideoId} />
              ) : (
                <YoutubeVideo videoId={youtubeVideoId} />
              )}
            </>
          ) : (
            <>
              <p>
                No podemos incrustar la emisión en directo.{' '}
                <a href={youtubeUrl}>Usa este enlace para ver la emisión en directo</a>
              </p>
            </>
          )}
        </main>
      </article>
    </>
  ) : (
    ''
  )
}

<div class='streaming'>
  <SocialNetwork
    icon='yt'
    href={youtubeUrl}
    text={`Enlace al directo`}
    alt='Logo de Youtube: partido en directo'
    title='Enlace para ver el partido en directo'
    style='--link-color: var(--live-color-hex, red); --link-alpha-color: 0.9;'
    loading='lazy'
  />
</div>

<style>
  article {
    border-radius: 1rem;
    padding: 1rem;
    overflow: hidden;
    border: 5pt solid var(--live-color-hex, tomato);
    position: absolute;
    z-index: 5;
    bottom: 0;
    right: 0;
    max-width: 280px;
    background: var(--background-color, canvas);
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    justify-content: center;
  }

  article > main {
    object-fit: contain;
    max-width: 100%;
    max-height: 100%;
    aspect-ratio: 16 / 9;
  }

  article > header {
    position: relative;
    top: 0;
    right: 2rem;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: 1rem;
    margin-left: 2rem;
    z-index: 1;
    width: 100%;
    height: 2rem;
    font-size: 1.25rem;
    color: var(--live-color-hex, tomato);
    font-weight: 900;
    text-transform: uppercase;
  }
  article > header button {
    padding: 0.5rem;
    width: 2rem;
    height: 2rem;
    font-size: 0.8rem;
    line-height: 100%;
    border-radius: 50%;
    background-color: #666;
    color: #000;
    border: none;
    position: relative;
    top: -0.5rem;
  }

  div.streaming > a {
    display: flex;
    justify-content: center;
  }
</style>

<script type='module' is:inline>
  const live = document.querySelector('article.live');
  const btn = document.querySelector('article.live button');
  btn.addEventListener('click', () => {
    live.style.display = 'none';
  });
</script>
