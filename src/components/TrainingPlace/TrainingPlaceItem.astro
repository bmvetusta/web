---
import type { z } from 'astro:schema';
import type { scheduleSchema, trainingSchema } from 'src/schema/training';
import { getWeekDayName } from 'src/services/get-week-day-name';

type Props = z.infer<typeof trainingSchema>;

const { id, place } = Astro.props;
const address = `${place}, ${Astro.props.address}`;

const conjunctionList = new Intl.ListFormat('es', {
  style: 'short',
  type: 'conjunction',
});

const schedules = Astro.props.schedules.map((s: z.infer<typeof scheduleSchema>) => {
  const weekDaysNames = s.weekDays.map((n) => getWeekDayName(n)).filter((v) => !!v);
  const weekDays = conjunctionList.format(weekDaysNames);
  const time = `${s.start} a ${s.end}`;

  return `${weekDays} de ${time}.`;
});

const baseURL = new URL(Astro.url);
baseURL.pathname = '';
---

<details name='training-place'>
  <summary>
    {place}
    {schedules.map((schedule) => <p>{schedule}</p>)}
  </summary>
  <address>
    üìç
    <a
      href=`maps://?q=${address}`
      title=`Ver en el mapa donde queda ${address}`
      aria-label={address}
    >
      Ver la direcci√≥n en el Mapa
    </a>
  </address>
  <p>
    üóìÔ∏è
    <a
      href=`/entrenar/${id}.ics`
      title='A√±adir entrenamiento al calendario'
      aria-label=`A√±adir al calendario los d√≠as de entrenamiento`>A√±adir al calendario</a
    >
  </p>
</details>

<style>
  details {
    border-radius: 0.25rem;
    padding: 0.5rem 1rem;
    font-size: 1.25rem;
    background: var(--training-details-background, #333);
    width: 20rem;
    max-width: 90dvw;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    line-height: 125%;
  }

  details > address,
  details > p {
    text-align: center;
  }

  details summary p {
    text-indent: 1.3rem;
    font-size: 1rem;
    opacity: 0.7;
  }

  details *,
  details summary p {
    opacity: 0.7;
  }

  details summary {
    opacity: 0.85;
  }

  a,
  a:visited {
    color: var(--primary-text-color);
    text-decoration: underline;
    font-size: 1.1rem;
  }
</style>
